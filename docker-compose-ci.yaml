version: '3.8'

services:
  migrate:
    build:
      context: .
    image: sergeipopov/hw34:$IMAGE_TAG
    environment:
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_HOST: $DB_HOST
      DB_PORT: 5432
      SECRET: $SECRET  
      DEBUG: True
    command: ./todolist/manage.py migrate
    # tty: true
    depends_on:
      pg:
        condition: service_healthy

  api:
    build:
      context: .
    image: sergeipopov/hw34:$IMAGE_TAG
    environment:
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_HOST: $DB_HOST
      DB_PORT: 5432
      SECRET: $SECRET  
      VK_APP_KEY: $VK_APP_KEY
      VK_APP_ID: $VK_APP_ID
      TG_TOKEN: $TG_TOKEN
      DEBUG: True
    tty: true
    ports: 
      - "8000:8000"
    command: ./todolist/manage.py runserver 0.0.0.0:8000
    depends_on:
      - pg
      - migrate

  botserver:
    build:
      context: .
    image: sergeipopov/hw34:$IMAGE_TAG
    environment:
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_HOST: $DB_HOST
      DB_PORT: 5432
      SECRET: $SECRET  
      VK_APP_KEY: $VK_APP_KEY
      VK_APP_ID: $VK_APP_ID
      TG_TOKEN: $TG_TOKEN
      DEBUG: True
    tty: true
    # ports: 
    #   - "8000:8000"
    command: ./todolist/manage.py runbot
    depends_on:
      - api

  pg:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_HOST: $DB_HOST
    restart: always
    ports:
    - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "3000:80"
    # volumes:
    #   - frontend:/app/build
    depends_on:
      - pg
      - api

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     # - "8000:8000"
  #     # - "3000:3000"
  #     - "1337:80"
  #   volumes:
  #     - ./todolist/django_static/:/usr/share/nginx/html/django_static/
  #     - ./todolist/django_media/:/usr/share/nginx/html/django_media/
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #     # - frontend:/usr/share/nginx/html/
  #   restart: always
  #   depends_on:
  #     - pg
  #     - api
  #     # - frontend

volumes:
  postgres_data:

  
